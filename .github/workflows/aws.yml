name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
    
    - name: Create .env file
      run: |
        echo "DbNAME=${{ secrets.DbNAME }}" >> .env
        echo "DbUSER=${{ secrets.DbUSER }}" >> .env
        echo "DbPASSWORD=${{ secrets.DbPASSWORD }}" >> .env
        echo "DbHOST=${{ secrets.DbHOST }}" >> .env
        echo "DbPORT=${{ secrets.DbPORT }}" >> .env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
        echo "DEBUG=${{ secrets.DEBUG }}" >> .env
        echo "DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}" >> .env
        echo "DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}" >> .env
        echo "DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}" >> .env

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker images
      run: | 
        docker-compose build
        docker-compose push

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Format Check
      working-directory: ./terraform
      run: terraform fmt -check

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Plan
      env:
        TF_VAR_dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
        TF_VAR_dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./terraform
      run: terraform plan

    - name: Apply Terraform changes
      env:
        TF_VAR_dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
        TF_VAR_dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./terraform
      run: terraform apply -auto-approve

  destroy:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Plan Destroy (Check if resources will be destroyed)
      env:
        TF_VAR_dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
        TF_VAR_dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./terraform
      run: terraform plan -destroy

    - name: Destroy Infrastructure
      env:
        TF_VAR_dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
        TF_VAR_dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: ./terraform
      run: terraform destroy -auto-approve
